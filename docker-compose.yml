version: '3.8'

services:
  service-dashboard:
    container_name: service-dashboard
    build:
      context: . # Root of the repository
      dockerfile: Dockerfile # Use the Dockerfile in the root
    # Optionally build and push image to a registry first, then use:
    # image: your-docker-registry/your-dashboard-image:latest
    restart: unless-stopped
    networks:
      # Connect to your existing WireGuard network
      wg-easy_wg: # Use the actual network name as the key
        ipv4_address: 10.42.42.12 # Assign the static IP
    volumes:
      # Automatically create and use a named volume (useful if you add features needing persistence)
      - dashboard_data:/app/data
    environment:
      # Optional: Override check URLs/ports or other settings via environment variables
      # CHECK_URL_NEXTCLOUD: "http://10.42.42.4:8080" # Example override
      # REQUEST_TIMEOUT_SECONDS: 15
      TZ: Europe/Amsterdam # Set your timezone

networks:
  # Declare the external network
  wg-easy_wg: # Use the same key as under services.networks
    external: true
    # IMPORTANT: Verify this is the EXACT name of your network in Portainer/Docker
    name: wg-easy_wg

volumes:
  # Declare the named volume Docker Compose will manage
  dashboard_data:
    driver: local